name: Release

on:
  release:
    types: [created]

permissions:
  contents: write
  packages: write

jobs:
  build-and-release:
    name: Build and Release
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        arch: [amd64, arm64]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.22' # Set to your required Go version

    - name: Compile gen_hubid
      run: |
        cd identity
        GOARCH=${{ matrix.arch }} GOOS=${{ matrix.os == 'macos-latest' && 'darwin' || 'linux' }} go build -o ../compiled_handlers/gen_hubid_${{ matrix.os == 'macos-latest' && 'darwin' || 'linux' }}_${{ matrix.arch }}
        cd ..

    - name: Compile relay
      run: |
        cd relay
        GOARCH=${{ matrix.arch }} GOOS=${{ matrix.os == 'macos-latest' && 'darwin' || 'linux' }} go build -o ../compiled_handlers/relay_${{ matrix.os == 'macos-latest' && 'darwin' || 'linux' }}_${{ matrix.arch }}
        cd ..

    - name: Compile postgresql plugin
      run: |
        cd postgresql
        GOARCH=${{ matrix.arch }} GOOS=${{ matrix.os == 'macos-latest' && 'darwin' || 'linux' }} go build -buildmode=plugin -o ../compiled_handlers/postgresql_${{ matrix.os == 'macos-latest' && 'darwin' || 'linux' }}_${{ matrix.arch }}.so
        cd ..

    - name: Create release package
      if: matrix.os == 'ubuntu-latest' && matrix.arch == 'amd64'
      run: |
        mkdir -p release/compiled_handlers
        mv compiled_handlers/* release/compiled_handlers/
        tar -czvf release.tar.gz -C release compiled_handlers

    - name: Upload Release Asset
      if: matrix.os == 'ubuntu-latest' && matrix.arch == 'amd64'
      uses: softprops/action-gh-release@v1
      with:
        files: release.tar.gz
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
