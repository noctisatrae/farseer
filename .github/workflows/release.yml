name: Release

on:
  release:
    types: [created]
  workflow_dispatch:

permissions:
  contents: write
  packages: write

jobs:
  build-and-release:
    name: Build and Release
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        arch: [amd64]
        include:
          - os: macos-latest
            arch: arm64

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.22.3'

    - name: Compile gen_hubid
      env:
        GOARCH: ${{ matrix.arch }}
        GOOS: ${{ matrix.os == 'macos-latest' && 'darwin' || 'linux' }}
      run: |
        cd identity
        go build -o ../release/gen_hubid_${{ matrix.os == 'macos-latest' && 'darwin' || 'linux' }}_${{ matrix.arch }}
        cd ..

    - name: Compile relay
      env:
        GOARCH: ${{ matrix.arch }}
        GOOS: ${{ matrix.os == 'macos-latest' && 'darwin' || 'linux' }}
      run: |
        cd relay
        go build -o ../release/relay_${{ matrix.os == 'macos-latest' && 'darwin' || 'linux' }}_${{ matrix.arch }}
        cd ..

    - name: Compile postgresql plugin
      env:
        CGO_ENABLED: 1
        GOARCH: ${{ matrix.arch }}
        GOOS: ${{ matrix.os == 'macos-latest' && 'darwin' || 'linux' }}
      run: |
        cd postgresql
        go build -buildmode=plugin -o ../release/compiled_handlers/postgresql_${{ matrix.os == 'macos-latest' && 'darwin' || 'linux' }}_${{ matrix.arch }}.so
        cd ..

    - name: Copy config.toml
      run: cp config.toml release/

    - name: Create release package
      run: |
        tar -czvf release_${{ matrix.os == 'macos-latest' && 'darwin' || 'linux' }}_${{ matrix.arch }}.tar.gz -C release .

    - name: Upload Release Asset
      uses: softprops/action-gh-release@v1
      with:
        files: release_${{ matrix.os == 'macos-latest' && 'darwin' || 'linux' }}_${{ matrix.arch }}.tar.gz
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}